Option Explicit
Private Function RightmostUorgEnd(ByVal titulo As String) As Long
    Dim u As Variant, pat As String
    Dim p As Long, bestEnd As Long
    
    ' Normaliza traço: também trata caso o título use EN DASH "–"
    Dim tituloNorm As String
    tituloNorm = Replace(titulo, " – ", " - ")
    
    bestEnd = 0
    For Each u In listUorg
        pat = " - " & CStr(u)
        ' Procura da direita para a esquerda (case-insensitive)
        p = InStrRev(tituloNorm, pat, -1, vbTextCompare)
        If p > 0 Then
            If p + Len(pat) > bestEnd Then
                bestEnd = p + Len(pat)
            End If
        End If
    Next u
    
    RightmostUorgEnd = bestEnd
End Function

Public Sub FiltrarSlicerPorSetor(setor As String)
    Dim sc As SlicerCache, visList(0 To 0) As String
    Set sc = ThisWorkbook.SlicerCaches(NOME_SLICER)
    
    If sc.OLAP Then
        visList(0) = "[Dados Tratados].[UORG - corrigido].&[" & setor & "]"
        sc.ClearManualFilter
        sc.VisibleSlicerItemsList = visList
    Else
        Dim si As SlicerItem
        sc.ClearManualFilter
        For Each si In sc.SlicerItems
            si.Selected = (si.Name = setor)
        Next si
    End If
End Sub

Private Sub GerarGraficoDeLinhas(setor As String, wsTemp As Worksheet, ultimalinha As Long, _
    colunas As Variant, posTop As Double, titulo As String)

    Dim ch As ChartObject
    Dim i As Variant
    Dim rngX As Range
    Dim rngY As Range
    Dim minY As Double, maxY As Double

    ' Cria o gráfico
    Set ch = wsTemp.ChartObjects.Add(Left:=10, Top:=posTop, Width:=396, Height:=178)

    With ch.Chart
        .ChartType = xlLine

        ' Define o eixo X (Ano + Mês)
        Set rngX = wsTemp.Range("A2:B" & ultimalinha)

        ' Reset min/max
        minY = 1E+99
        maxY = -1E+99

        ' Adiciona cada série
        For i = LBound(colunas) To UBound(colunas)
            Set rngY = wsTemp.Range(wsTemp.Cells(2, colunas(i)), wsTemp.Cells(ultimalinha, colunas(i)))
            
            .SeriesCollection.NewSeries
            .SeriesCollection(.SeriesCollection.Count).Name = wsTemp.Cells(1, colunas(i)).Value
            .SeriesCollection(.SeriesCollection.Count).XValues = rngX
            .SeriesCollection(.SeriesCollection.Count).Values = rngY

            ' Atualiza min/max do eixo Y
            If Application.Min(rngY) < minY Then minY = Application.Min(rngY)
            If Application.Max(rngY) > maxY Then maxY = Application.Max(rngY)
        Next i

        ' Título
        .HasTitle = True
        With .ChartTitle
            .Text = titulo & " | " & setor
            .Font.Size = 14
            .Font.Bold = False
            .Font.Color = RGB(89, 89, 89)
        End With

        ' Eixo Y (dinâmico com MajorUnit controlado)
        With .Axes(xlValue)
            .MinimumScale = WorksheetFunction.RoundDown(minY, 0)
            .MaximumScale = WorksheetFunction.RoundUp(maxY, 0)
            
            ' Decide a unidade principal
            Dim faixa As Double
            faixa = .MaximumScale - .MinimumScale
            
            Select Case True
                Case faixa < 0.7
                    .MajorUnit = 0.25
                Case faixa < 3
                    .MajorUnit = 0.5
                Case faixa < 6
                    .MajorUnit = 1
                Case Else
                    .MajorUnit = 2
            End Select
            
            .TickLabels.NumberFormat = "#.##0,00"
            .TickLabels.Font.Size = 9
            .TickLabels.Font.Color = RGB(89, 89, 89)
            .Format.Line.Visible = msoFalse
            .HasMajorGridlines = True
        End With


        ' Eixo X
        With .Axes(xlCategory).TickLabels.Font
            .Size = 9
            .Color = RGB(89, 89, 89)
        End With

        ' Legenda ? só mostra se houver mais de 1 série
        .HasLegend = (UBound(colunas) > LBound(colunas))
        If .HasLegend Then .Legend.Position = xlLegendPositionBottom

        .Axes(xlCategory).HasTitle = False
        .Axes(xlValue).HasTitle = False
    End With
    Debug.Print ("Gerando gráfico " & titulo)
    
End Sub

Private Sub PreencheIntervaloApartirTabDinamica(setor As String, wsTemp As Worksheet, sheet As String)
    Dim wsPivot As Worksheet
    Dim pt As PivotTable
    Dim rngTemp As Range
    Dim i As Long
    
    ' Get/pega tabela dinâmica
    Set wsPivot = ThisWorkbook.Sheets(sheet)
    On Error Resume Next
    Set pt = wsPivot.PivotTables(1)
    If pt Is Nothing Then
        MsgBox "Tabela Dinâmica não encontrada!"
        Exit Sub
    End If
    On Error GoTo 0

    ' Filtra a Tabela Dinâmica
    Call FiltrarSlicerPorSetor(setor)
    On Error Resume Next
    If wsTemp Is Nothing Then
        Set wsTemp = ThisWorkbook.Sheets.Add
        wsTemp.Name = SHEET_TEMPORARIO
    Else
        wsTemp.Cells.Clear
    End If
    On Error GoTo 0

    ' Copia dados filtrados
    pt.TableRange2.Copy
    wsTemp.Range("A1").PasteSpecial Paste:=xlPasteValues
    Application.CutCopyMode = False
    wsTemp.Range("A2", "E100").NumberFormat = "0.00"
 
End Sub

Private Sub MesclarColunaAno(ws As Worksheet, ByVal colAno As Long, ByVal primeiraLinha As Long, ByVal ultimalinha As Long)
    Dim i As Long, j As Long
    Dim v As String, prox As String

    'garante que não há mesclas antigas
    ws.Range(ws.Cells(primeiraLinha, colAno), ws.Cells(ultimalinha, colAno)).UnMerge

    i = primeiraLinha
    Do While i <= ultimalinha
        j = i
        Do While j < ultimalinha
            v = Trim$(CStr(ws.Cells(j, colAno).Value))
            prox = Trim$(CStr(ws.Cells(j + 1, colAno).Value))
            If v <> prox Then Exit Do
            j = j + 1
        Loop

        If j > i Then
            With ws.Range(ws.Cells(i, colAno), ws.Cells(j, colAno))
                .Merge
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlCenter
            End With
        End If

        i = j + 1
    Loop
End Sub
    
    Debug.Print "TransformarPivotChartEmNormal concluído para: " & chPivot.Name
    Debug.Print "======================================"
End Sub
